version: '3.9'
services:
  test-backend:
    container_name: test-backend
    image: test-backend
    build: ./backend
    command: ./start.sh
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    working_dir: /app
    restart: on-failure
    depends_on:
      test-migration:
        condition: service_completed_successfully
    env_file:
      - ./.env

  test-postgres:
    container_name: test-postgres
    image: postgres
    restart: on-failure
    expose:
      - "${DB_PORT}"
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - ./.env
    command: -p ${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -p ${DB_PORT}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  test-migration:
    container_name: test-migration
    image: test-backend
    command: alembic upgrade head
    volumes:
      - ./backend:/app
    depends_on:
      test-postgres:
        condition: service_healthy
    env_file:
      - ./.env

  test-frontend:
    container_name: test-frontend
    image: test-frontend
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: >
      sh -c "npm run build && npm run preview"
    working_dir: /app
    stdin_open: true
    tty: true
    restart: on-failure